openapi: 3.0.0
info:
  title: AI Power Watch API
  description: An AI-powered E-commerce website using the MERN stack
  version: 1.0.0
servers:
  - url: http://localhost:5000/api
    description: Local development server
tags:
  - name: Auth
    description: Operations related to authentication

paths:
  "/auth/login":
    post:
      summary: Login Your Account
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDTO'
             
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseDTO'
        '400':
          $ref: '#/components/responses/auth_400'
        '500':
          $ref: '#/components/responses/500'
  "/auth/register":
    post:
      summary: Register Your Account
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterDTO'
      responses:
        '200':
          description: Register successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseDTO'
        '400':
          $ref: '#/components/responses/auth_400'
        '500':
          $ref: '#/components/responses/500'
components:
  schemas:
      # @ Login DTO
    LoginDTO:
      type: object
      properties:
        email:
          type: string
          example: example@.com
        password:
          type: string
          format: password
          example: pass1234
      required:
      - email
      - password
    # @ Login Response DTO
    LoginResponseDTO:
        type: object
        properties:
          code:
            type: integer
            format: int32
            example: 200
          message:
            type: string
            example: Login Successful
          data:
            type: object
            properties:
              token:
                type: string
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwiaWF0IjoxNjUwMjYxNjU3LCJleHAiOjE2NTAzNjE2NTd9.9ZrGgXz0kVn4E3B8UQl9dA5iV7L4L5jx9yFz4gV0mE
              name:
                type: string
                example: John
              email:
                type: string
                example: 0l6g6@example.com
              role:
                type: string
                example: admin
              avatar:
                type: string
                example: https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50
          links:
            type: object
            properties:
              self:
                type: string
                example: "/auth/login"

    # @ Register Request DTO
    RegisterDTO:
      type: object
      properties:
        name:
          type: string
          example: John
        email:
          type: string
          example: 0l6g6@example.com
        password:
          type: string
          format: password
          example: pass1234
      required:
      - name
      - email
      - password

    # @ Register Response DTO
    RegisterResponseDTO:
        type: object
        properties:
          code:
            type: integer
            format: int32
            example: 200
          message:
            type: string
            example: Register Successful
          data:
            type: object
            properties:
              token:
                type: string
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwiaWF0IjoxNjUwMjYxNjU3LCJleHAiOjE2NTAzNjE2NTd9.9ZrGgXz0kVn4E3B8UQl9dA5iV7L4L5jx9yFz4gV0mE
              name:
                type: string
                example: John
              email:
                type: string
                example: 0l6g6@example.com
              role:
                type: string
                example: admin
              avatar:
                type: string
                example: https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50
          links:
            type: string
            example: "/auth/register"



  responses:
    'auth_400':
      description: Invalid email or password
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Invalid email or password
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Internal Server Error
    